import 'dart:io';

class BankAccount {
  int? _accountNumber;
  double _balance = 0.0;

  void setAccountNumber(int accountNumber) {
    _accountNumber = accountNumber;
  }

  int? getAccountNumber() {
    return _accountNumber;
  }

  double getBalance() {
    return _balance;
  }

  void deposit(double amount) {
    if (amount > 0) {
      _balance += amount;
    } else {
      print("Deposit amount must be positive.");
    }
  }

  void withdraw(double amount) {
    if (amount > 0 && _balance >= amount) {
      _balance -= amount;
    } else {
      print("Insufficient balance or invalid withdrawal amount.");
    }
  }
}

class SavingsAccount extends BankAccount {
  double interestRate;

  SavingsAccount(this.interestRate);

  @override
  void deposit(double amount) {
    double interest = amount * interestRate / 100;
    double totalAmount = amount + interest;
    if (totalAmount > 0) {
      _balance += totalAmount;
    } else {
      print("Deposit amount must be positive.");
    }
  }
}

void main() {
  BankAccount account = BankAccount();

  stdout.write('Enter account number: ');
  int accountNumber = int.parse(stdin.readLineSync()!);
  account.setAccountNumber(accountNumber);

  stdout.write('Enter amount for deposit: ');
  double depositAmount = double.parse(stdin.readLineSync()!);
  account.deposit(depositAmount);

  stdout.write('Enter amount for withdrawal: ');
  double withdrawAmount = double.parse(stdin.readLineSync()!);
  account.withdraw(withdrawAmount);

  print("Account Number: ${account.getAccountNumber()}");
  print("Balance: ${account.getBalance()}");

  stdout.write('Enter interest rate for savings account: ');
  double interestRate = double.parse(stdin.readLineSync()!);
  SavingsAccount savingsAccount = SavingsAccount(interestRate);

  stdout.write('Enter amount for deposit into savings account: ');
  double savingsDepositAmount = double.parse(stdin.readLineSync()!);
  savingsAccount.deposit(savingsDepositAmount);

  print("Savings Account Balance: ${savingsAccount.getBalance()}");
}
